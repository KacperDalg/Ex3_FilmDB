// <auto-generated />
using FilmBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilmBase.Migrations
{
    [DbContext(typeof(FilmsDbContext))]
    [Migration("20220901124834_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.Property<string>("ActorsSurname")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilmsTitle")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ActorsSurname", "FilmsTitle");

                    b.HasIndex("FilmsTitle");

                    b.ToTable("ActorFilm");
                });

            modelBuilder.Entity("FilmBase.Models.Actor", b =>
                {
                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Surname");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("FilmBase.Models.Film", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Title");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("ActorFilm", b =>
                {
                    b.HasOne("FilmBase.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsSurname")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmBase.Models.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
